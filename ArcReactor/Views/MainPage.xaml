<Page x:Class="ArcReactor.Views.MainPage"      
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:controls="using:Template10.Controls"
      xmlns:converters="using:Template10.Converters"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:ArcReactor.Views"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      d:DataContext="{d:DesignData ../DesignData/SampleMainPageViewModel.xaml}"
      xmlns:vm="using:ArcReactor.ViewModels" mc:Ignorable="d">

    <Page.DataContext>
        <vm:MainPageViewModel x:Name="ViewModel" />
    </Page.DataContext>

    <Page.Resources>
        <converters:ValueWhenConverter x:Key="VisibleWhenTrueConverter">
            <converters:ValueWhenConverter.When>
                <x:Boolean>True</x:Boolean>
            </converters:ValueWhenConverter.When>
            <converters:ValueWhenConverter.Value>
                <Visibility>Visible</Visibility>
            </converters:ValueWhenConverter.Value>
            <converters:ValueWhenConverter.Otherwise>
                <Visibility>Collapsed</Visibility>
            </converters:ValueWhenConverter.Otherwise>
        </converters:ValueWhenConverter>

        <converters:ValueWhenConverter x:Key="NegationConverter">
            <converters:ValueWhenConverter.When>
                <x:Boolean>True</x:Boolean>
            </converters:ValueWhenConverter.When>
            <converters:ValueWhenConverter.Value>
                <x:Boolean>False</x:Boolean>
            </converters:ValueWhenConverter.Value>
            <converters:ValueWhenConverter.Otherwise>
                <x:Boolean>True</x:Boolean>
            </converters:ValueWhenConverter.Otherwise>
        </converters:ValueWhenConverter>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="100" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0">
            <ComboBox x:Name="cbDevices" HorizontalAlignment="Stretch" ItemsSource="{Binding BluetoothSerialDevices}" SelectedItem="{Binding SelectedDevice, Mode=TwoWay}" Grid.Row="0">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Button Content="{Binding ConnectButtonDescription}" HorizontalAlignment="Stretch" x:Name="btnConnect" Click="{x:Bind ViewModel.Connect}" />
        </StackPanel>

        <Pivot Grid.Row="1" Visibility="{Binding IsConnected, Converter={StaticResource VisibleWhenTrueConverter}}">
            <!--  about  -->
            <PivotItem Header="Basic functions">
                <StackPanel>
                    <Button Content="Pulse" HorizontalAlignment="Stretch" Click="{x:Bind ViewModel.SendPulse}" />
                    <Button Content="Startup" HorizontalAlignment="Stretch" Click="{x:Bind ViewModel.SendStartup}" />
                    <Button Content="Turn Off" HorizontalAlignment="Stretch" Click="{x:Bind ViewModel.SendBlack}" />
                    <Button Content="Get Battery Level" HorizontalAlignment="Stretch" Click="{x:Bind ViewModel.GetBatteryLevel}" />
                    <TextBlock Text="{Binding BatteryLevel}" />
                </StackPanel>
            </PivotItem>

            <PivotItem Header="Colors">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50" />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <StackPanel Orientation="Horizontal" Grid.Row="0">
                        <Button Content="Copy first to all" Margin="0,0,10,0" Click="{x:Bind ViewModel.CopyFirstLed}" />
                        <Button Content="Apply all" Margin="0,0,10,0" Click="{x:Bind ViewModel.SendLeds}" />
                    </StackPanel>
                    
                    <ScrollViewer IsVerticalRailEnabled="True" Grid.Row="1">
                        <ListView ItemsSource="{Binding LedColors}">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="30" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MaxWidth="200" />
                                            <ColumnDefinition MaxWidth="100" />
                                            <ColumnDefinition Width="20" />
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding Color}" Style="{StaticResource SubtitleTextBlockStyle}" />
                                        <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Index}" Style="{StaticResource SubtitleTextBlockStyle}" HorizontalAlignment="Center" />

                                        <StackPanel Grid.Column="0" Grid.Row="1">
                                            <Slider HorizontalAlignment="Stretch" Width="200" Maximum="127" Value="{Binding R, Mode=TwoWay}" Foreground="Red" />
                                            <Slider HorizontalAlignment="Stretch" Width="200" Maximum="127" Value="{Binding G, Mode=TwoWay}" Foreground="Green" />
                                            <Slider HorizontalAlignment="Stretch" Width="200" Maximum="127" Value="{Binding B, Mode=TwoWay}" Foreground="Blue" />
                                        </StackPanel>

                                        <Button Grid.Column="1" Grid.Row="1" Content="Apply" Margin="10,0,0,0" VerticalAlignment="Center" Click="ApplyButtonClick" />

                                        <Rectangle Grid.Column="2" Grid.RowSpan="2" Width="20" Margin="10,5,0,5">
                                            <Rectangle.Fill>
                                                <SolidColorBrush Color="{Binding Color}" />
                                            </Rectangle.Fill>
                                        </Rectangle>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </ScrollViewer>
                </Grid>
            </PivotItem>
        </Pivot>
    </Grid>

    <Page.BottomAppBar>
        <CommandBar>
            <AppBarButton Label="Refresh" Icon="Refresh" Click="{x:Bind ViewModel.RefreshDevicesList}" IsEnabled="{Binding IsConnected, Converter={StaticResource NegationConverter}}" />

            <CommandBar.SecondaryCommands>
                <AppBarButton Label="about" Click="{x:Bind ViewModel.GotoAbout}" />
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Page.BottomAppBar>
</Page>